{"ast":null,"code":"import axios from 'axios';\n// Configuración base de axios\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para agregar el token a las peticiones\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Interceptor para manejar errores de autenticación\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Servicios de autenticación\nexport const authService = {\n  async login(credentials) {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  async register(userData) {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\n\n// Servicios de usuarios\nexport const userService = {\n  async getUsers() {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  async getUserById(id) {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Servicios de proyectos\nexport const projectService = {\n  async getProjects() {\n    const response = await api.get('/projects');\n    return response.data;\n  },\n  async getProjectById(id) {\n    const response = await api.get(`/projects/${id}`);\n    return response.data;\n  },\n  async createProject(project) {\n    const response = await api.post('/projects', project);\n    return response.data;\n  },\n  async updateProject(id, project) {\n    const response = await api.put(`/projects/${id}`, project);\n    return response.data;\n  },\n  async deleteProject(id) {\n    await api.delete(`/projects/${id}`);\n  },\n  async getProjectTasks(projectId) {\n    const response = await api.get(`/projects/${projectId}/tasks`);\n    return response.data;\n  }\n};\n\n// Servicios de tareas\nexport const taskService = {\n  async getTasks() {\n    const response = await api.get('/tasks');\n    return response.data;\n  },\n  async getTaskById(id) {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  },\n  async createTask(task) {\n    const response = await api.post('/tasks', task);\n    return response.data;\n  },\n  async updateTask(id, task) {\n    const response = await api.put(`/tasks/${id}`, task);\n    return response.data;\n  },\n  async deleteTask(id) {\n    await api.delete(`/tasks/${id}`);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authService","login","credentials","post","data","register","userData","logout","userService","getUsers","get","getUserById","id","projectService","getProjects","getProjectById","createProject","project","updateProject","put","deleteProject","delete","getProjectTasks","projectId","taskService","getTasks","getTaskById","createTask","task","updateTask","deleteTask"],"sources":["C:/Users/Gabriela/Desktop/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/examen-2025-ii-pds-u1-LuzkalidGM/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { \r\n  User, \r\n  Project, \r\n  Task, \r\n  CreateProjectDto, \r\n  CreateTaskDto, \r\n  LoginDto, \r\n  LoginResponse,\r\n  ApiResponse \r\n} from '../types';\r\n\r\n// Configuración base de axios\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor para agregar el token a las peticiones\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Interceptor para manejar errores de autenticación\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Servicios de autenticación\r\nexport const authService = {\r\n  async login(credentials: LoginDto): Promise<LoginResponse> {\r\n    const response = await api.post<LoginResponse>('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  async register(userData: any): Promise<ApiResponse<User>> {\r\n    const response = await api.post<ApiResponse<User>>('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\n// Servicios de usuarios\r\nexport const userService = {\r\n  async getUsers(): Promise<User[]> {\r\n    const response = await api.get<User[]>('/users');\r\n    return response.data;\r\n  },\r\n\r\n  async getUserById(id: number): Promise<User> {\r\n    const response = await api.get<User>(`/users/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Servicios de proyectos\r\nexport const projectService = {\r\n  async getProjects(): Promise<Project[]> {\r\n    const response = await api.get<Project[]>('/projects');\r\n    return response.data;\r\n  },\r\n\r\n  async getProjectById(id: number): Promise<Project> {\r\n    const response = await api.get<Project>(`/projects/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async createProject(project: CreateProjectDto): Promise<Project> {\r\n    const response = await api.post<Project>('/projects', project);\r\n    return response.data;\r\n  },\r\n\r\n  async updateProject(id: number, project: Partial<CreateProjectDto>): Promise<Project> {\r\n    const response = await api.put<Project>(`/projects/${id}`, project);\r\n    return response.data;\r\n  },\r\n\r\n  async deleteProject(id: number): Promise<void> {\r\n    await api.delete(`/projects/${id}`);\r\n  },\r\n\r\n  async getProjectTasks(projectId: number): Promise<Task[]> {\r\n    const response = await api.get<Task[]>(`/projects/${projectId}/tasks`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Servicios de tareas\r\nexport const taskService = {\r\n  async getTasks(): Promise<Task[]> {\r\n    const response = await api.get<Task[]>('/tasks');\r\n    return response.data;\r\n  },\r\n\r\n  async getTaskById(id: number): Promise<Task> {\r\n    const response = await api.get<Task>(`/tasks/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async createTask(task: CreateTaskDto): Promise<Task> {\r\n    const response = await api.post<Task>('/tasks', task);\r\n    return response.data;\r\n  },\r\n\r\n  async updateTask(id: number, task: Partial<CreateTaskDto>): Promise<Task> {\r\n    const response = await api.put<Task>(`/tasks/${id}`, task);\r\n    return response.data;\r\n  },\r\n\r\n  async deleteTask(id: number): Promise<void> {\r\n    await api.delete(`/tasks/${id}`);\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}