{"ast":null,"code":"import axios from'axios';// Configuración base de axios\nconst api=axios.create({baseURL:'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Interceptor para agregar el token a las peticiones\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Interceptor para manejar errores de autenticación\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});// Servicios de autenticación\nexport const authService={async login(credentials){const response=await api.post('/auth/login',credentials);return response.data;},async register(userData){const response=await api.post('/auth/register',userData);return response.data;},logout(){localStorage.removeItem('token');localStorage.removeItem('user');}};// Servicios de usuarios\nexport const userService={async getUsers(){const response=await api.get('/users');return response.data;},async getUserById(id){const response=await api.get(\"/users/\".concat(id));return response.data;}};// Servicios de proyectos\nexport const projectService={async getProjects(){const response=await api.get('/projects');return response.data;},async getProjectById(id){const response=await api.get(\"/projects/\".concat(id));return response.data;},async createProject(project){const response=await api.post('/projects',project);return response.data;},async updateProject(id,project){const response=await api.put(\"/projects/\".concat(id),project);return response.data;},async deleteProject(id){await api.delete(\"/projects/\".concat(id));},async getProjectTasks(projectId){const response=await api.get(\"/projects/\".concat(projectId,\"/tasks\"));return response.data;}};// Servicios de tareas\nexport const taskService={async getTasks(){const response=await api.get('/tasks');return response.data;},async getTaskById(id){const response=await api.get(\"/tasks/\".concat(id));return response.data;},async createTask(task){const response=await api.post('/tasks',task);return response.data;},async updateTask(id,task){const response=await api.put(\"/tasks/\".concat(id),task);return response.data;},async deleteTask(id){await api.delete(\"/tasks/\".concat(id));}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authService","login","credentials","post","data","register","userData","logout","userService","getUsers","get","getUserById","id","projectService","getProjects","getProjectById","createProject","project","updateProject","put","deleteProject","delete","getProjectTasks","projectId","taskService","getTasks","getTaskById","createTask","task","updateTask","deleteTask"],"sources":["C:/Users/Gabriela/Desktop/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/examen-2025-ii-pds-u1-LuzkalidGM/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { \r\n  User, \r\n  Project, \r\n  Task, \r\n  CreateProjectDto, \r\n  CreateTaskDto, \r\n  UpdateTaskDto,\r\n  LoginDto, \r\n  LoginResponse,\r\n  ApiResponse \r\n} from '../types';\r\n\r\n// Configuración base de axios\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor para agregar el token a las peticiones\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Interceptor para manejar errores de autenticación\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Servicios de autenticación\r\nexport const authService = {\r\n  async login(credentials: LoginDto): Promise<LoginResponse> {\r\n    const response = await api.post<LoginResponse>('/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n\r\n  async register(userData: any): Promise<ApiResponse<User>> {\r\n    const response = await api.post<ApiResponse<User>>('/auth/register', userData);\r\n    return response.data;\r\n  },\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\n// Servicios de usuarios\r\nexport const userService = {\r\n  async getUsers(): Promise<User[]> {\r\n    const response = await api.get<User[]>('/users');\r\n    return response.data;\r\n  },\r\n\r\n  async getUserById(id: number): Promise<User> {\r\n    const response = await api.get<User>(`/users/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Servicios de proyectos\r\nexport const projectService = {\r\n  async getProjects(): Promise<Project[]> {\r\n    const response = await api.get<Project[]>('/projects');\r\n    return response.data;\r\n  },\r\n\r\n  async getProjectById(id: number): Promise<Project> {\r\n    const response = await api.get<Project>(`/projects/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async createProject(project: CreateProjectDto): Promise<Project> {\r\n    const response = await api.post<Project>('/projects', project);\r\n    return response.data;\r\n  },\r\n\r\n  async updateProject(id: number, project: Partial<CreateProjectDto>): Promise<Project> {\r\n    const response = await api.put<Project>(`/projects/${id}`, project);\r\n    return response.data;\r\n  },\r\n\r\n  async deleteProject(id: number): Promise<void> {\r\n    await api.delete(`/projects/${id}`);\r\n  },\r\n\r\n  async getProjectTasks(projectId: number): Promise<Task[]> {\r\n    const response = await api.get<Task[]>(`/projects/${projectId}/tasks`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Servicios de tareas\r\nexport const taskService = {\r\n  async getTasks(): Promise<Task[]> {\r\n    const response = await api.get<Task[]>('/tasks');\r\n    return response.data;\r\n  },\r\n\r\n  async getTaskById(id: number): Promise<Task> {\r\n    const response = await api.get<Task>(`/tasks/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async createTask(task: CreateTaskDto): Promise<Task> {\r\n    const response = await api.post<Task>('/tasks', task);\r\n    return response.data;\r\n  },\r\n\r\n  async updateTask(id: number, task: UpdateTaskDto): Promise<Task> {\r\n    const response = await api.put<Task>(`/tasks/${id}`, task);\r\n    return response.data;\r\n  },\r\n\r\n  async deleteTask(id: number): Promise<void> {\r\n    await api.delete(`/tasks/${id}`);\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}