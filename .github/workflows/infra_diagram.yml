name: Generar Diagrama de Infraestructura

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - '.github/workflows/infra_diagram.yml'
  workflow_dispatch:

jobs:
  generate-infra-diagram:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install diagrams
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Generate Infrastructure Diagram
        run: |
          python - <<EOF
          from diagrams import Diagram, Cluster, Edge
          from diagrams.azure.compute import AppServices
          from diagrams.azure.database import SQLDatabases
          from diagrams.azure.general import Subscriptions
          from diagrams.azure.network import Firewalls
          from diagrams.azure.web import AppServicePlans
          from diagrams.onprem.client import Users
          from diagrams.programming.flowchart import StartEnd
          from diagrams.generic.blank import Blank
          import os

          # Create docs directory if it doesn't exist
          os.makedirs("docs", exist_ok=True)

          # Configure diagram attributes
          graph_attr = {
              "fontsize": "16",
              "bgcolor": "white",
              "rankdir": "TB",
              "splines": "ortho"
          }

          with Diagram("Infraestructura de Gestión de Proyectos", 
                      filename="docs/infrastructure_diagram", 
                      show=False, 
                      direction="TB",
                      graph_attr=graph_attr):
              
              with Cluster("Internet"):
                  users = Users("Usuarios")
              
              with Cluster("Azure Cloud - Brazil South"):
                  with Cluster("Resource Group: upt-arg-978"):
                      
                      with Cluster("Frontend"):
                          frontend = AppServices("Frontend\n(Angular/React)")
                      
                      with Cluster("Backend API"):
                          api = AppServices("API .NET Core\n(Project Management)")
                      
                      with Cluster("Database"):
                          sql_server = SQLDatabases("SQL Server\nupt-dbs-978")
                          firewall = Firewalls("Firewall Rules\nPublic Access")
                          sql_db = SQLDatabases("Database: shorten")
              
              # Define connections
              users >> Edge(label="HTTPS", style="bold") >> frontend
              frontend >> Edge(label="API Calls", style="bold") >> api
              api >> Edge(label="SQL Connection", style="bold") >> sql_server
              sql_server >> firewall
              firewall >> sql_db

          print("✅ Diagrama de infraestructura generado exitosamente")
          EOF

      - name: Verify diagram generation
        run: |
          if [ -f "docs/infrastructure_diagram.png" ]; then
            echo "✅ Diagrama generado correctamente"
            ls -la docs/
          else
            echo "❌ Error: No se pudo generar el diagrama"
            exit 1
          fi

      - name: Update README with diagram
        run: |
          # Create or update README section with infrastructure diagram
          if [ ! -f "README.md" ]; then
            echo "# Proyecto: Aplicación de Gestión de Proyectos y Actividades" > README.md
          fi
          
          # Remove existing diagram section if it exists
          sed -i '/## 📊 Diagrama de Infraestructura/,/^## /{ /^## 📊 Diagrama de Infraestructura/!{ /^## /!d; }; }' README.md
          
          # Add new diagram section
          echo "" >> README.md
          echo "## 📊 Diagrama de Infraestructura" >> README.md
          echo "" >> README.md
          echo "El siguiente diagrama muestra la arquitectura de la infraestructura desplegada en Azure:" >> README.md
          echo "" >> README.md
          echo "![Diagrama de Infraestructura](docs/infrastructure_diagram.png)" >> README.md
          echo "" >> README.md
          echo "### Componentes de la Infraestructura:" >> README.md
          echo "" >> README.md
          echo "- **Resource Group**: upt-arg-978 - Contenedor de todos los recursos" >> README.md
          echo "- **Frontend**: Aplicación web (Angular/React) desplegada en Azure App Service" >> README.md
          echo "- **Backend API**: API REST en .NET Core desplegada en Azure App Service" >> README.md
          echo "- **Base de Datos**: SQL Server upt-dbs-978 con base de datos shorten" >> README.md
          echo "- **Firewall**: Reglas de acceso público para conectividad externa" >> README.md
          echo "" >> README.md
          echo "### Flujo de Datos:" >> README.md
          echo "1. Los usuarios acceden a la aplicación frontend via HTTPS" >> README.md
          echo "2. El frontend realiza llamadas a la API backend" >> README.md
          echo "3. La API se conecta a SQL Server para operaciones de datos" >> README.md
          echo "4. Las reglas de firewall permiten el acceso controlado a la base de datos" >> README.md
          echo "" >> README.md
          echo "*Diagrama generado automáticamente*" >> README.md

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add docs/infrastructure_diagram.png README.md
          
          if git diff --staged --quiet; then
            echo "No hay cambios que commitear"
          else
            git commit -m "📊 Actualizar diagrama de infraestructura - Generar diagrama actualizado de la infraestructura Azure"
            
            git push
            echo "✅ Diagrama actualizado y pusheado al repositorio"
          fi

      - name: Create or update documentation
        run: |
          mkdir -p docs
          echo "# Documentación de Infraestructura" > docs/infrastructure.md
          echo "" >> docs/infrastructure.md
          echo "## Arquitectura General" >> docs/infrastructure.md
          echo "Este proyecto utiliza una arquitectura de tres capas desplegada en Microsoft Azure." >> docs/infrastructure.md
          echo "" >> docs/infrastructure.md
          echo "### Componentes:" >> docs/infrastructure.md
          echo "- Resource Group: upt-arg-978" >> docs/infrastructure.md
          echo "- SQL Server: upt-dbs-978" >> docs/infrastructure.md
          echo "- SQL Database: shorten" >> docs/infrastructure.md
          echo "- Location: Brazil South" >> docs/infrastructure.md
          echo "" >> docs/infrastructure.md
          echo "*Documentación generada automáticamente*" >> docs/infrastructure.md

          echo "✅ Documentación de infraestructura creada en docs/infrastructure.md"

      - name: Summary
        run: |
          echo "## 📊 Resumen de Generación de Diagrama" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Diagrama de infraestructura generado exitosamente**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Archivos generados:" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 \`docs/infrastructure_diagram.png\` - Diagrama visual de la infraestructura" >> $GITHUB_STEP_SUMMARY
          echo "- 📖 \`docs/infrastructure.md\` - Documentación detallada de la infraestructura" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 \`README.md\` - Actualizado con el diagrama y descripción" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Componentes incluidos:" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Resource Group (upt-arg-978)" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Frontend (App Service)" >> $GITHUB_STEP_SUMMARY
          echo "- ⚙️ Backend API (.NET Core)" >> $GITHUB_STEP_SUMMARY
          echo "- 💾 SQL Server + Database" >> $GITHUB_STEP_SUMMARY
          echo "- 🔒 Firewall Rules" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Próximos pasos**: El diagrama se actualizará automáticamente cuando se modifique la infraestructura." >> $GITHUB_STEP_SUMMARY